export const abi = [
	{
		inputs: [
			{
				internalType: 'contract IEntryPoint',
				name: '_entryPoint',
				type: 'address',
			},
			{
				internalType: 'address',
				name: '_verifyingSigner',
				type: 'address',
			},
		],
		stateMutability: 'nonpayable',
		type: 'constructor',
	},
	{ inputs: [], name: 'ECDSAInvalidSignature', type: 'error' },
	{
		inputs: [{ internalType: 'uint256', name: 'length', type: 'uint256' }],
		name: 'ECDSAInvalidSignatureLength',
		type: 'error',
	},
	{
		inputs: [{ internalType: 'bytes32', name: 's', type: 'bytes32' }],
		name: 'ECDSAInvalidSignatureS',
		type: 'error',
	},
	{
		inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
		name: 'OwnableInvalidOwner',
		type: 'error',
	},
	{
		inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
		name: 'OwnableUnauthorizedAccount',
		type: 'error',
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: 'address',
				name: 'previousOwner',
				type: 'address',
			},
			{
				indexed: true,
				internalType: 'address',
				name: 'newOwner',
				type: 'address',
			},
		],
		name: 'OwnershipTransferred',
		type: 'event',
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: 'address',
				name: 'newVerifyingSigner',
				type: 'address',
			},
		],
		name: 'VerifyingSignerUpdated',
		type: 'event',
	},
	{
		inputs: [
			{ internalType: 'uint32', name: 'unstakeDelaySec', type: 'uint32' },
		],
		name: 'addStake',
		outputs: [],
		stateMutability: 'payable',
		type: 'function',
	},
	{
		inputs: [],
		name: 'deposit',
		outputs: [],
		stateMutability: 'payable',
		type: 'function',
	},
	{
		inputs: [],
		name: 'entryPoint',
		outputs: [
			{ internalType: 'contract IEntryPoint', name: '', type: 'address' },
		],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [],
		name: 'getDeposit',
		outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{
				components: [
					{
						internalType: 'address',
						name: 'sender',
						type: 'address',
					},
					{ internalType: 'uint256', name: 'nonce', type: 'uint256' },
					{ internalType: 'bytes', name: 'initCode', type: 'bytes' },
					{ internalType: 'bytes', name: 'callData', type: 'bytes' },
					{
						internalType: 'bytes32',
						name: 'accountGasLimits',
						type: 'bytes32',
					},
					{
						internalType: 'uint256',
						name: 'preVerificationGas',
						type: 'uint256',
					},
					{
						internalType: 'bytes32',
						name: 'gasFees',
						type: 'bytes32',
					},
					{
						internalType: 'bytes',
						name: 'paymasterAndData',
						type: 'bytes',
					},
					{ internalType: 'bytes', name: 'signature', type: 'bytes' },
				],
				internalType: 'struct PackedUserOperation',
				name: 'userOp',
				type: 'tuple',
			},
			{ internalType: 'uint48', name: 'validUntil', type: 'uint48' },
			{ internalType: 'uint48', name: 'validAfter', type: 'uint48' },
		],
		name: 'getHash',
		outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [],
		name: 'owner',
		outputs: [{ internalType: 'address', name: '', type: 'address' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{ internalType: 'bytes', name: 'paymasterAndData', type: 'bytes' },
		],
		name: 'parsePaymasterAndData',
		outputs: [
			{ internalType: 'uint48', name: 'validUntil', type: 'uint48' },
			{ internalType: 'uint48', name: 'validAfter', type: 'uint48' },
			{ internalType: 'bytes', name: 'signature', type: 'bytes' },
		],
		stateMutability: 'pure',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'enum IPaymaster.PostOpMode',
				name: 'mode',
				type: 'uint8',
			},
			{ internalType: 'bytes', name: 'context', type: 'bytes' },
			{ internalType: 'uint256', name: 'actualGasCost', type: 'uint256' },
			{
				internalType: 'uint256',
				name: 'actualUserOpFeePerGas',
				type: 'uint256',
			},
		],
		name: 'postOp',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [],
		name: 'renounceOwnership',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{ internalType: 'address', name: 'newOwner', type: 'address' },
		],
		name: 'transferOwnership',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [],
		name: 'unlockStake',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address',
				name: '_newVerifyingSigner',
				type: 'address',
			},
		],
		name: 'updateVerifyingSigner',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{
				components: [
					{
						internalType: 'address',
						name: 'sender',
						type: 'address',
					},
					{ internalType: 'uint256', name: 'nonce', type: 'uint256' },
					{ internalType: 'bytes', name: 'initCode', type: 'bytes' },
					{ internalType: 'bytes', name: 'callData', type: 'bytes' },
					{
						internalType: 'bytes32',
						name: 'accountGasLimits',
						type: 'bytes32',
					},
					{
						internalType: 'uint256',
						name: 'preVerificationGas',
						type: 'uint256',
					},
					{
						internalType: 'bytes32',
						name: 'gasFees',
						type: 'bytes32',
					},
					{
						internalType: 'bytes',
						name: 'paymasterAndData',
						type: 'bytes',
					},
					{ internalType: 'bytes', name: 'signature', type: 'bytes' },
				],
				internalType: 'struct PackedUserOperation',
				name: 'userOp',
				type: 'tuple',
			},
			{ internalType: 'bytes32', name: 'userOpHash', type: 'bytes32' },
			{ internalType: 'uint256', name: 'maxCost', type: 'uint256' },
		],
		name: 'validatePaymasterUserOp',
		outputs: [
			{ internalType: 'bytes', name: 'context', type: 'bytes' },
			{
				internalType: 'uint256',
				name: 'validationData',
				type: 'uint256',
			},
		],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [],
		name: 'verifyingSigner',
		outputs: [{ internalType: 'address', name: '', type: 'address' }],
		stateMutability: 'view',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address payable',
				name: 'withdrawAddress',
				type: 'address',
			},
		],
		name: 'withdrawStake',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
	{
		inputs: [
			{
				internalType: 'address payable',
				name: 'withdrawAddress',
				type: 'address',
			},
			{ internalType: 'uint256', name: 'amount', type: 'uint256' },
		],
		name: 'withdrawTo',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
];

export const byteCode =
	'0x60a060405234801561001057600080fd5b506040516114fc3803806114fc83398101604081905261002f916101d2565b81338061005757604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61006081610096565b5061006a816100b2565b6001600160a01b03908116608052600280546001600160a01b0319169290911691909117905550610235565b600180546001600160a01b03191690556100af8161016d565b50565b6040516301ffc9a760e01b8152631313998b60e31b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156100fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610121919061020c565b6100af5760405162461bcd60e51b815260206004820152601e60248201527f49456e747279506f696e7420696e74657266616365206d69736d617463680000604482015260640161004e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146100af57600080fd5b600080604083850312156101e557600080fd5b82516101f0816101bd565b6020840151909250610201816101bd565b809150509250929050565b60006020828403121561021e57600080fd5b8151801515811461022e57600080fd5b9392505050565b60805161127b610281600039600081816102a60152818161037a01528181610411015281816106be01528181610758015281816107c801528181610855015261094b015261127b6000f3fe6080604052600436106101095760003560e01c806393b9412111610095578063c23a5cea11610064578063c23a5cea146102dd578063c399ec88146102fd578063d0e30db014610312578063e30c39781461031a578063f2fde38b1461033857600080fd5b806393b941211461024457806394d4ad6014610264578063b0d691fe14610294578063bb9fe6bf146102c857600080fd5b80635829c5f5116100dc5780635829c5f5146101ae578063715018a6146101dc57806379ba5097146101f15780637c627b21146102065780638da5cb5b1461022657600080fd5b80630396cb601461010e578063205c28781461012357806323d9ac9b1461014357806352b7512c14610180575b600080fd5b61012161011c366004610e20565b610358565b005b34801561012f57600080fd5b5061012161013e366004610e62565b6103e3565b34801561014f57600080fd5b50600254610163906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561018c57600080fd5b506101a061019b366004610ea7565b610455565b604051610177929190610ef5565b3480156101ba57600080fd5b506101ce6101c9366004610f65565b610479565b604051908152602001610177565b3480156101e857600080fd5b50610121610597565b3480156101fd57600080fd5b506101216105ab565b34801561021257600080fd5b5061012161022136600461100c565b6105f4565b34801561023257600080fd5b506000546001600160a01b0316610163565b34801561025057600080fd5b5061012161025f366004611077565b610610565b34801561027057600080fd5b5061028461027f366004611094565b61066c565b60405161017794939291906110d6565b3480156102a057600080fd5b506101637f000000000000000000000000000000000000000000000000000000000000000081565b3480156102d457600080fd5b506101216106b4565b3480156102e957600080fd5b506101216102f8366004611077565b610731565b34801561030957600080fd5b506101ce6107b0565b610121610840565b34801561032657600080fd5b506001546001600160a01b0316610163565b34801561034457600080fd5b50610121610353366004611077565b6108a2565b610360610913565b604051621cb65b60e51b815263ffffffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630396cb609034906024016000604051808303818588803b1580156103c757600080fd5b505af11580156103db573d6000803e3d6000fd5b505050505050565b6103eb610913565b60405163040b850f60e31b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b1580156103c757600080fd5b60606000610461610940565b61046c8585856109b0565b915091505b935093915050565b6000806104896020860186611077565b905080602086013561049e6040880188611123565b6040516104ac92919061116a565b6040519081900390206104c26060890189611123565b6040516104d092919061116a565b60405190819003902060808901356104eb60e08b018b611123565b6104fa9160349160149161117a565b610503916111a4565b604080516001600160a01b0390971660208801528601949094526060850192909252608084015260a08084019190915260c08084019290925287013560e0830152860135610100820152466101208201523061014082015265ffffffffffff80861661016083015284166101808201526101a001604051602081830303815290604052805190602001209150509392505050565b61059f610913565b6105a96000610b45565b565b60015433906001600160a01b031681146105e85760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b6105f181610b45565b50565b6105fc610940565b6106098585858585610b5e565b5050505050565b610618610913565b600280546001600160a01b0319166001600160a01b0383169081179091556040519081527f51d754ac8f7adf515a023f2c423e01ef97817c1af33cb63b36f1fe12fde2d91a9060200160405180910390a150565b600080368161067e856034818961117a565b81019061068b91906111c2565b9094509250858561069e603460406111f5565b6106a992829061117a565b949793965094505050565b6106bc610913565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561071757600080fd5b505af115801561072b573d6000803e3d6000fd5b50505050565b610739610913565b60405163611d2e7560e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea90602401600060405180830381600087803b15801561079c57600080fd5b505af1158015610609573d6000803e3d6000fd5b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610817573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083b9190611216565b905090565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024016000604051808303818588803b15801561079c57600080fd5b6108aa610913565b600180546001600160a01b0383166001600160a01b031990911681179091556108db6000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6000546001600160a01b031633146105a95760405163118cdaa760e01b81523360048201526024016105df565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105a95760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b60448201526064016105df565b60606000808036816109c861027f60e08b018b611123565b9296509094509250905060408114806109e15750604181145b610a55576040805162461bcd60e51b81526020600482015260248101919091527f566572696679696e675061796d61737465723a20696e76616c6964207369676e60448201527f6174757265206c656e67746820696e207061796d6173746572416e644461746160648201526084016105df565b6000610a98610a658b8787610479565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b9050610ada8184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610b9692505050565b6002546001600160a01b03908116911614610b1a57610afb60018686610bc2565b6040518060200160405280600081525090965096505050505050610471565b610b2660008686610bc2565b6040805160208101909152600081529b909a5098505050505050505050565b600180546001600160a01b03191690556105f181610bf7565b60405162461bcd60e51b815260206004820152600d60248201526c6d757374206f7665727269646560981b60448201526064016105df565b600080600080610ba68686610c47565b925092509250610bb68282610c94565b50909150505b92915050565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b85610bea576000610bed565b60015b1717949350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060008351604103610c815760208401516040850151606086015160001a610c7388828585610d51565b955095509550505050610c8d565b50508151600091506002905b9250925092565b6000826003811115610ca857610ca861122f565b03610cb1575050565b6001826003811115610cc557610cc561122f565b03610ce35760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115610cf757610cf761122f565b03610d185760405163fce698f760e01b8152600481018290526024016105df565b6003826003811115610d2c57610d2c61122f565b03610d4d576040516335e2f38360e21b8152600481018290526024016105df565b5050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610d8c5750600091506003905082610e16565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610de0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610e0c57506000925060019150829050610e16565b9250600091508190505b9450945094915050565b600060208284031215610e3257600080fd5b813563ffffffff81168114610e4657600080fd5b9392505050565b6001600160a01b03811681146105f157600080fd5b60008060408385031215610e7557600080fd5b8235610e8081610e4d565b946020939093013593505050565b60006101208284031215610ea157600080fd5b50919050565b600080600060608486031215610ebc57600080fd5b833567ffffffffffffffff811115610ed357600080fd5b610edf86828701610e8e565b9660208601359650604090950135949350505050565b604081526000835180604084015260005b81811015610f235760208187018101516060868401015201610f06565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b803565ffffffffffff81168114610f6057600080fd5b919050565b600080600060608486031215610f7a57600080fd5b833567ffffffffffffffff811115610f9157600080fd5b610f9d86828701610e8e565b935050610fac60208501610f4a565b9150610fba60408501610f4a565b90509250925092565b60008083601f840112610fd557600080fd5b50813567ffffffffffffffff811115610fed57600080fd5b60208301915083602082850101111561100557600080fd5b9250929050565b60008060008060006080868803121561102457600080fd5b85356003811061103357600080fd5b9450602086013567ffffffffffffffff81111561104f57600080fd5b61105b88828901610fc3565b9699909850959660408101359660609091013595509350505050565b60006020828403121561108957600080fd5b8135610e4681610e4d565b600080602083850312156110a757600080fd5b823567ffffffffffffffff8111156110be57600080fd5b6110ca85828601610fc3565b90969095509350505050565b65ffffffffffff8516815265ffffffffffff8416602082015260606040820152816060820152818360808301376000818301608090810191909152601f909201601f191601019392505050565b6000808335601e1984360301811261113a57600080fd5b83018035915067ffffffffffffffff82111561115557600080fd5b60200191503681900382131561100557600080fd5b8183823760009101908152919050565b6000808585111561118a57600080fd5b8386111561119757600080fd5b5050820193919092039150565b80356020831015610bbc57600019602084900360031b1b1692915050565b600080604083850312156111d557600080fd5b6111de83610f4a565b91506111ec60208401610f4a565b90509250929050565b80820180821115610bbc57634e487b7160e01b600052601160045260246000fd5b60006020828403121561122857600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220d60cea746b68db14dc7e0183ce468ee6205af6d23c8f1e604dc54efcf009e45264736f6c634300081d00330000000000000000000000004337084d9e255ff0702461cf8895ce9e3b5ff10800000000000000000000000080a1874e1046b1cc5defdf4d3153838b72ff94ac';
