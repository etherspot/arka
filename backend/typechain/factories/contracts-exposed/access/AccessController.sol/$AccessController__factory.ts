/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  $AccessController,
  $AccessControllerInterface,
} from "../../../../contracts-exposed/access/AccessController.sol/$AccessController";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newGuardian",
        type: "address",
      },
    ],
    name: "GuardianAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "removedGuardian",
        type: "address",
      },
    ],
    name: "GuardianRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "removedOwner",
        type: "address",
      },
    ],
    name: "OwnerRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newGuardian",
        type: "address",
      },
    ],
    name: "$_addGuardian",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "$_addOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
    ],
    name: "$_removeGuardian",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "$_removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "__hh_exposed_bytecode_marker",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newGuardian",
        type: "address",
      },
    ],
    name: "addGuardian",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "addOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isGuardian",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
    ],
    name: "removeGuardian",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040527f686172646861742d6578706f736564000000000000000000000000000000000060025534801561003457600080fd5b5061104e806100446000396000f3fe6080604052600436106100a05760003560e01c80632f54bf6e116100645780632f54bf6e1461018d578063337992b8146101ca578063342db739146101f35780637065cb481461021e5780637140415614610247578063a526d83b14610270576100a7565b8063062e1b6a146100ac5780630c68ba21146100d55780631124bf4214610112578063173825d91461013b578063196666e514610164576100a7565b366100a757005b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190610be6565b610299565b005b3480156100e157600080fd5b506100fc60048036038101906100f79190610be6565b6102a5565b6040516101099190610c2e565b60405180910390f35b34801561011e57600080fd5b5061013960048036038101906101349190610be6565b6102fb565b005b34801561014757600080fd5b50610162600480360381019061015d9190610be6565b610307565b005b34801561017057600080fd5b5061018b60048036038101906101869190610be6565b6103a1565b005b34801561019957600080fd5b506101b460048036038101906101af9190610be6565b6103ad565b6040516101c19190610c2e565b60405180910390f35b3480156101d657600080fd5b506101f160048036038101906101ec9190610be6565b610402565b005b3480156101ff57600080fd5b5061020861040e565b6040516102159190610c62565b60405180910390f35b34801561022a57600080fd5b5061024560048036038101906102409190610be6565b610414565b005b34801561025357600080fd5b5061026e60048036038101906102699190610be6565b6104ae565b005b34801561027c57600080fd5b5061029760048036038101906102929190610be6565b610538565b005b6102a2816105c2565b50565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b610304816106e0565b50565b610310336103ad565b8061034657503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806103565750610355336102a5565b5b610395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038c90610cda565b60405180910390fd5b61039e816106e0565b50565b6103aa8161086a565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b61040b816109f6565b50565b60025481565b61041d336103ad565b8061045357503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806104635750610462336102a5565b5b6104a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049990610cda565b60405180910390fd5b6104ab8161086a565b50565b6104b7336103ad565b806104ed57503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61052c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052390610d46565b60405180910390fd5b610535816105c2565b50565b610541336103ad565b8061057757503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6105b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ad90610d46565b60405180910390fd5b6105bf816109f6565b50565b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661064e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064590610db2565b60405180910390fd5b7fb8107d0c6b40be480ce3172ee66ba6d64b71f6b1685a851340036e6e2e3e3c528160405161067d9190610de1565b60405180910390a16000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361074e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074590610e48565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166107d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d090610eb4565b60405180910390fd5b7f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da816040516108089190610de1565b60405180910390a160008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d090610f20565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610965576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095c90610f8c565b60405180910390fd5b7f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c3816040516109949190610de1565b60405180910390a160016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5c90610f20565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610af2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae990610ff8565b60405180910390fd5b7f038596bb31e2e7d3d9f184d4c98b310103f6d7f5830e5eec32bffe6f1728f96981604051610b219190610de1565b60405180910390a160018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bb382610b88565b9050919050565b610bc381610ba8565b8114610bce57600080fd5b50565b600081359050610be081610bba565b92915050565b600060208284031215610bfc57610bfb610b83565b5b6000610c0a84828501610bd1565b91505092915050565b60008115159050919050565b610c2881610c13565b82525050565b6000602082019050610c436000830184610c1f565b92915050565b6000819050919050565b610c5c81610c49565b82525050565b6000602082019050610c776000830184610c53565b92915050565b600082825260208201905092915050565b7f41434c3a3a206f6e6c79206f776e6572206f7220677561726469616e00000000600082015250565b6000610cc4601c83610c7d565b9150610ccf82610c8e565b602082019050919050565b60006020820190508181036000830152610cf381610cb7565b9050919050565b7f41434c3a3a206f6e6c79206f776e657200000000000000000000000000000000600082015250565b6000610d30601083610c7d565b9150610d3b82610cfa565b602082019050919050565b60006020820190508181036000830152610d5f81610d23565b9050919050565b7f41434c3a3a206e6f6e2d6578697374616e7420677561726469616e0000000000600082015250565b6000610d9c601b83610c7d565b9150610da782610d66565b602082019050919050565b60006020820190508181036000830152610dcb81610d8f565b9050919050565b610ddb81610ba8565b82525050565b6000602082019050610df66000830184610dd2565b92915050565b7f41434c3a3a2072656d6f76696e672073656c6600000000000000000000000000600082015250565b6000610e32601383610c7d565b9150610e3d82610dfc565b602082019050919050565b60006020820190508181036000830152610e6181610e25565b9050919050565b7f41434c3a3a206e6f6e2d6578697374616e74206f776e65720000000000000000600082015250565b6000610e9e601883610c7d565b9150610ea982610e68565b602082019050919050565b60006020820190508181036000830152610ecd81610e91565b9050919050565b7f41434c3a3a207a65726f20616464726573730000000000000000000000000000600082015250565b6000610f0a601283610c7d565b9150610f1582610ed4565b602082019050919050565b60006020820190508181036000830152610f3981610efd565b9050919050565b7f41434c3a3a20616c7265616479206f776e657200000000000000000000000000600082015250565b6000610f76601383610c7d565b9150610f8182610f40565b602082019050919050565b60006020820190508181036000830152610fa581610f69565b9050919050565b7f41434c3a3a20616c726561647920677561726469616e00000000000000000000600082015250565b6000610fe2601683610c7d565b9150610fed82610fac565b602082019050919050565b6000602082019050818103600083015261101181610fd5565b905091905056fea2646970667358221220e77475f88ab2a2cc1f44eed147335a30f608321e88117078c2214db536c2038364736f6c63430008110033";

type $AccessControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: $AccessControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class $AccessController__factory extends ContractFactory {
  constructor(...args: $AccessControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<$AccessController> {
    return super.deploy(overrides || {}) as Promise<$AccessController>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): $AccessController {
    return super.attach(address) as $AccessController;
  }
  override connect(signer: Signer): $AccessController__factory {
    return super.connect(signer) as $AccessController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): $AccessControllerInterface {
    return new utils.Interface(_abi) as $AccessControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): $AccessController {
    return new Contract(address, _abi, signerOrProvider) as $AccessController;
  }
}
