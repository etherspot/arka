/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  $Whitelist,
  $WhitelistInterface,
} from "../../../../contracts-exposed/paymaster/Whitelist.sol/$Whitelist";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "AddedBatchToWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddedToWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "RemovedBatchFromWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "RemovedFromWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "WhitelistInitialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "$_add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
    ],
    name: "$_addBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sponsor",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "$_check",
    outputs: [
      {
        internalType: "bool",
        name: "ret0",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "$_checkOwner",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "$_msgData",
    outputs: [
      {
        internalType: "bytes",
        name: "ret0",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "$_msgSender",
    outputs: [
      {
        internalType: "address",
        name: "ret0",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "$_remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
    ],
    name: "$_removeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "$_transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "__hh_exposed_bytecode_marker",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
    ],
    name: "addBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sponsor",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "check",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
    ],
    name: "removeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040527f686172646861742d6578706f736564000000000000000000000000000000000060025534801561003457600080fd5b5061005161004661005660201b60201c565b61005e60201b60201c565b610122565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611410806101316000396000f3fe6080604052600436106101185760003560e01c80638da5cb5b116100a0578063b324b2fa11610064578063b324b2fa14610380578063cbe8b0b6146103a9578063ebcca707146103e6578063f2fde38b146103fd578063fe1c9a24146104265761011f565b80638da5cb5b146102895780638eb3d213146102b45780639fb3336f146102dd578063b092145e14610306578063b3154db0146103435761011f565b806329092d0e116100e757806329092d0e146101ca57806332cadf3c146101f3578063342db7391461021e5780636b845bfe14610249578063715018a6146102725761011f565b80630a3b0a4f146101245780631c7b5b8d1461014d57806324efa264146101765780632904df291461019f5761011f565b3661011f57005b600080fd5b34801561013057600080fd5b5061014b60048036038101906101469190610d50565b61044f565b005b34801561015957600080fd5b50610174600480360381019061016f9190610de2565b6104b5565b005b34801561018257600080fd5b5061019d60048036038101906101989190610de2565b6104c3565b005b3480156101ab57600080fd5b506101b461052c565b6040516101c19190610e3e565b60405180910390f35b3480156101d657600080fd5b506101f160048036038101906101ec9190610d50565b61053b565b005b3480156101ff57600080fd5b506102086105a1565b6040516102159190610ee9565b60405180910390f35b34801561022a57600080fd5b506102336105f3565b6040516102409190610f24565b60405180910390f35b34801561025557600080fd5b50610270600480360381019061026b9190610de2565b6105f9565b005b34801561027e57600080fd5b50610287610662565b005b34801561029557600080fd5b5061029e610676565b6040516102ab9190610e3e565b60405180910390f35b3480156102c057600080fd5b506102db60048036038101906102d69190610d50565b61069f565b005b3480156102e957600080fd5b5061030460048036038101906102ff9190610de2565b6106ab565b005b34801561031257600080fd5b5061032d60048036038101906103289190610f3f565b6106b9565b60405161033a9190610f9a565b60405180910390f35b34801561034f57600080fd5b5061036a60048036038101906103659190610f3f565b6106e8565b6040516103779190610f9a565b60405180910390f35b34801561038c57600080fd5b506103a760048036038101906103a29190610d50565b6106fc565b005b3480156103b557600080fd5b506103d060048036038101906103cb9190610f3f565b610708565b6040516103dd9190610f9a565b60405180910390f35b3480156103f257600080fd5b506103fb61071c565b005b34801561040957600080fd5b50610424600480360381019061041f9190610d50565b610726565b005b34801561043257600080fd5b5061044d60048036038101906104489190610d50565b6107a9565b005b610458816107b5565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f0c4b48e75a1f7ab0a9a2f786b5d6c1f7789020403bff177fb54d46edb89ccc0060405160405180910390a350565b6104bf8282610905565b5050565b6104cd8282610959565b81816040516104dd929190611072565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167f6eabb183ad4385932735ae89018089a008c58e814451b618bc0dd0e7922f6d1360405160405180910390a35050565b60006105366109ad565b905090565b610544816109b5565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd288ab5da2e1f37cf384a1565a3f905ad289b092fbdd31950dbbfef148c04f8860405160405180910390a350565b60606105ab610b05565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050905090565b60025481565b6106038282610905565b8181604051610613929190611072565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167f75dcdde27b71b9c529ae8b02072e1eeda244662d2d9c2effea5a1afb8fc913f360405160405180910390a35050565b61066a610b12565b6106746000610b90565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106a8816107b5565b50565b6106b58282610959565b5050565b60016020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60006106f48383610c54565b905092915050565b610705816109b5565b50565b60006107148383610c54565b905092915050565b610724610b12565b565b61072e610b12565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361079d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107949061110e565b60405180910390fd5b6107a681610b90565b50565b6107b281610b90565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610824576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081b9061117a565b60405180910390fd5b61082e3382610c54565b1561086e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108659061120c565b60405180910390fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60005b82829050811015610954576109438383838181106109295761092861122c565b5b905060200201602081019061093e9190610d50565b6109b5565b8061094d90611294565b9050610908565b505050565b60005b828290508110156109a85761099783838381811061097d5761097c61122c565b5b90506020020160208101906109929190610d50565b6107b5565b806109a190611294565b905061095c565b505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1b9061117a565b60405180910390fd5b610a2e3382610c54565b610a6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a649061134e565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b3660008036915091509091565b610b1a6109ad565b73ffffffffffffffffffffffffffffffffffffffff16610b38610676565b73ffffffffffffffffffffffffffffffffffffffff1614610b8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b85906113ba565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d1d82610cf2565b9050919050565b610d2d81610d12565b8114610d3857600080fd5b50565b600081359050610d4a81610d24565b92915050565b600060208284031215610d6657610d65610ce8565b5b6000610d7484828501610d3b565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610da257610da1610d7d565b5b8235905067ffffffffffffffff811115610dbf57610dbe610d82565b5b602083019150836020820283011115610ddb57610dda610d87565b5b9250929050565b60008060208385031215610df957610df8610ce8565b5b600083013567ffffffffffffffff811115610e1757610e16610ced565b5b610e2385828601610d8c565b92509250509250929050565b610e3881610d12565b82525050565b6000602082019050610e536000830184610e2f565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e93578082015181840152602081019050610e78565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ebb82610e59565b610ec58185610e64565b9350610ed5818560208601610e75565b610ede81610e9f565b840191505092915050565b60006020820190508181036000830152610f038184610eb0565b905092915050565b6000819050919050565b610f1e81610f0b565b82525050565b6000602082019050610f396000830184610f15565b92915050565b60008060408385031215610f5657610f55610ce8565b5b6000610f6485828601610d3b565b9250506020610f7585828601610d3b565b9150509250929050565b60008115159050919050565b610f9481610f7f565b82525050565b6000602082019050610faf6000830184610f8b565b92915050565b600081905092915050565b6000819050919050565b610fd381610d12565b82525050565b6000610fe58383610fca565b60208301905092915050565b60006110006020840184610d3b565b905092915050565b6000602082019050919050565b60006110218385610fb5565b935061102c82610fc0565b8060005b85811015611065576110428284610ff1565b61104c8882610fd9565b975061105783611008565b925050600181019050611030565b5085925050509392505050565b600061107f828486611015565b91508190509392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006110f860268361108b565b91506111038261109c565b604082019050919050565b60006020820190508181036000830152611127816110eb565b9050919050565b7f57686974656c6973743a3a205a65726f20616464726573730000000000000000600082015250565b600061116460188361108b565b915061116f8261112e565b602082019050919050565b6000602082019050818103600083015261119381611157565b9050919050565b7f57686974656c6973743a3a204163636f756e7420697320616c7265616479207760008201527f686974656c697374656400000000000000000000000000000000000000000000602082015250565b60006111f6602a8361108b565b91506112018261119a565b604082019050919050565b60006020820190508181036000830152611225816111e9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600061129f8261128a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112d1576112d061125b565b5b600182019050919050565b7f57686974656c6973743a3a204163636f756e74206973206e6f7420776869746560008201527f6c69737465640000000000000000000000000000000000000000000000000000602082015250565b600061133860268361108b565b9150611343826112dc565b604082019050919050565b600060208201905081810360008301526113678161132b565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006113a460208361108b565b91506113af8261136e565b602082019050919050565b600060208201905081810360008301526113d381611397565b905091905056fea2646970667358221220c88c9b3b232117928c0b426479dd61026ff451acbd870fb484a76140761b40db64736f6c63430008110033";

type $WhitelistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: $WhitelistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class $Whitelist__factory extends ContractFactory {
  constructor(...args: $WhitelistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<$Whitelist> {
    return super.deploy(overrides || {}) as Promise<$Whitelist>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): $Whitelist {
    return super.attach(address) as $Whitelist;
  }
  override connect(signer: Signer): $Whitelist__factory {
    return super.connect(signer) as $Whitelist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): $WhitelistInterface {
    return new utils.Interface(_abi) as $WhitelistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): $Whitelist {
    return new Contract(address, _abi, signerOrProvider) as $Whitelist;
  }
}
