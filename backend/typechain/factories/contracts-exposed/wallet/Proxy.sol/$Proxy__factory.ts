/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  $Proxy,
  $ProxyInterface,
} from "../../../../contracts-exposed/wallet/Proxy.sol/$Proxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "__hh_exposed_bytecode_marker",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040527f686172646861742d6578706f736564000000000000000000000000000000000060005534801561003457600080fd5b506040516102cc3803806102cc83398181016040528101906100569190610133565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100bd906101bd565b60405180910390fd5b80305550506101dd565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610100826100d5565b9050919050565b610110816100f5565b811461011b57600080fd5b50565b60008151905061012d81610107565b92915050565b600060208284031215610149576101486100d0565b5b60006101578482850161011e565b91505092915050565b600082825260208201905092915050565b7f496e76616c696420616464726573732070726f76696465640000000000000000600082015250565b60006101a7601883610160565b91506101b282610171565b602082019050919050565b600060208201905081810360008301526101d68161019a565b9050919050565b60e1806101eb6000396000f3fe608060405260043610601f5760003560e01c8063342db73914604f576025565b36602557005b6000305490503660008037600080366000845af43d6000803e60008103604a573d6000fd5b3d6000f35b348015605a57600080fd5b5060616075565b604051606c91906092565b60405180910390f35b60005481565b6000819050919050565b608c81607b565b82525050565b600060208201905060a560008301846085565b9291505056fea2646970667358221220b51542729147351e9503c0ad3be492fc7deb90cc9d3fd5ddc48a1482efa2553664736f6c63430008110033";

type $ProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: $ProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class $Proxy__factory extends ContractFactory {
  constructor(...args: $ProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _singleton: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<$Proxy> {
    return super.deploy(_singleton, overrides || {}) as Promise<$Proxy>;
  }
  override getDeployTransaction(
    _singleton: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_singleton, overrides || {});
  }
  override attach(address: string): $Proxy {
    return super.attach(address) as $Proxy;
  }
  override connect(signer: Signer): $Proxy__factory {
    return super.connect(signer) as $Proxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): $ProxyInterface {
    return new utils.Interface(_abi) as $ProxyInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): $Proxy {
    return new Contract(address, _abi, signerOrProvider) as $Proxy;
  }
}
